"use strict";(self.webpackChunksk_blog=self.webpackChunksk_blog||[]).push([[7926],{5634:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return m},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=n(3117),o=n(102),i=(n(7294),n(3905)),r=["components"],l={},m="Dynamic Programming",p={unversionedId:"algorithms/dynamic-programming",id:"algorithms/dynamic-programming",title:"Dynamic Programming",description:"Dynamic programming has been my nemesis for awhile now and it is about time I tackle dynamic programming",source:"@site/docs/algorithms/dynamic-programming.mdx",sourceDirName:"algorithms",slug:"/algorithms/dynamic-programming",permalink:"/shaokiat-blog/docs/algorithms/dynamic-programming",draft:!1,editUrl:"https://github.com/shaokiat/shaokiat-blog/tree/main/docs/algorithms/dynamic-programming.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Binary Search",permalink:"/shaokiat-blog/docs/algorithms/binary-search"},next:{title:"Graphs",permalink:"/shaokiat-blog/docs/algorithms/graph"}},s={},c=[{value:"What is Dynamic Programming",id:"what-is-dynamic-programming",level:3},{value:"Top Down Approach",id:"top-down-approach",level:3},{value:"Example Solutions",id:"example-solutions",level:2},{value:"Road Trip",id:"road-trip",level:3},{value:"Recurrence Relation",id:"recurrence-relation",level:4},{value:"Approach",id:"approach",level:4},{value:"Solution",id:"solution",level:4},{value:"House Robber",id:"house-robber",level:3},{value:"Recurrence Relation",id:"recurrence-relation-1",level:4},{value:"Solution",id:"solution-1",level:4},{value:"01 Matrix",id:"01-matrix",level:3},{value:"Solution 1: DP with Top-Down and Bottom-Up",id:"solution-1-dp-with-top-down-and-bottom-up",level:4},{value:"Solution 2: BFS starting from zeroes",id:"solution-2-bfs-starting-from-zeroes",level:4}],u={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dynamic-programming"},"Dynamic Programming"),(0,i.kt)("p",null,"Dynamic programming has been my nemesis for awhile now and it is about time I tackle dynamic programming\nusing the same approach for dynamic programming."),(0,i.kt)("h3",{id:"what-is-dynamic-programming"},"What is Dynamic Programming"),(0,i.kt)("p",null,"Find out all possible solutions, then pick out best solution."),(0,i.kt)("p",null,"Recursive in nature."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Principle of Optimality:")," A problem can be solved by taking a sequence of decisions to get the optimal solution."),(0,i.kt)("h3",{id:"top-down-approach"},"Top Down Approach"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Identify ",(0,i.kt)("strong",{parentName:"li"},"recurrence relation")),(0,i.kt)("li",{parentName:"ol"},"Recursive solution (top-down)"),(0,i.kt)("li",{parentName:"ol"},"Recursive + Memoization (top-down)"),(0,i.kt)("li",{parentName:"ol"},"Iterative + Memoization (bottom-up)"),(0,i.kt)("li",{parentName:"ol"},"Iterative + N variables (bottom-up)")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"TIP")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Fantastic ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=5dRGRueKU3M"},"explanation")," by ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/channel/UCZCFT11CWBi3MHNlGf019nw"},"Abdul Bari"),"\non Top Down Approach using Fibonacci example."))),(0,i.kt)("h2",{id:"example-solutions"},"Example Solutions"),(0,i.kt)("h3",{id:"road-trip"},"Road Trip"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Context")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Below is a question I had encountered during one of the technical assessment that ",(0,i.kt)("em",{parentName:"p"},"tripped")," me."))),(0,i.kt)("p",null,"You are going on a road trip. You are going to get in your trusty car and drive to Panglossia, where\nyou will spend a nice vacation by the beach. Your car holds C litre of petrol and gets ",(0,i.kt)("em",{parentName:"p"},"m")," km per litre. You are handed a list of the n petrol stations\nare on the road and the price they sell petrol."),(0,i.kt)("p",null,"Let distance","[i]"," be the distance of the i-th gas station from Start, let cost","[i]"," be the cost of petrol per litre\nat the i-th station. Furthermore, you can assume that for any two stations i and j, the distance |distance","[i]"," - distance","[j]","|\nbetween them is divisible by ",(0,i.kt)("em",{parentName:"p"},"m"),". You start out with an empty tank at station 1. Your final destination is station ",(0,i.kt)("em",{parentName:"p"},"n"),"."),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Hint")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Hardest part is identifying the recurrence relation"))),(0,i.kt)("h4",{id:"recurrence-relation"},"Recurrence Relation"),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("img",{src:"/shaokiat-blog/img/algo/dp-road-trip.png",alt:"roadtrip",width:"600"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"for each possible i: C(station j, k) = C(station j+1, k - d + i) + cost(station j) * i\n\nC(station j, k): minimum cost to reach destination from station j, with k litre in tank\nk: k litre of fuel\nd: distance from station j to station j+1\ni: amount of fuel topped up\n\n")),(0,i.kt)("h4",{id:"approach"},"Approach"),(0,i.kt)("p",null,"You can observe that if you have already solved the problem for all j' > j, then it is not hard\nto compute ",(0,i.kt)("em",{parentName:"p"},"C(station j, k)"),"."),(0,i.kt)("p",null,"If you start with ",(0,i.kt)("em",{parentName:"p"},"k")," litres and it is ",(0,i.kt)("em",{parentName:"p"},"d")," km from the next station, then for all ",(0,i.kt)("em",{parentName:"p"},"i"),",\nlookup the already computed ",(0,i.kt)("em",{parentName:"p"},"C(station j+1, k - d + i)"),", which tells you the minimum cost for\narriving at station ",(0,i.kt)("em",{parentName:"p"},"j+1")," with ",(0,i.kt)("em",{parentName:"p"},"k - d + i")," litres of petrol. Add this cost per litre at station j times ",(0,i.kt)("em",{parentName:"p"},"i"),",\nand choose the ",(0,i.kt)("em",{parentName:"p"},"i")," that is the cheapest."),(0,i.kt)("p",null,"Work in reverse until you get to the first station, and you will eventually find the cheapest way\nto reach destination."),(0,i.kt)("h4",{id:"solution"},"Solution"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"def minimumCost(distance, n, C, cost, m):\n  dp = [[0 for i in range(C)] for j in range(n)]\n  for j in range(n - 2, -1, -1): # Traverse all stations in reverse\n    for k in range(C): # How much fuel in tank starting from station j\n      d_next = (distance[j+1] - distance[j]) // m\n      min_ = float('inf')\n      for i in range(C-k): # How much fuel topped up\n        if k + i >= d_next:\n          min_ = min(min_, dp[j+1][k - d_next + i] + cost[j] * i)\n      dp[j][k] = min_\n  print(dp)\n  return (dp[0][0])\n\nC = 10 # Capacity of petrol; starts with 0\nn = 3\ncost = [10,1,1]\nd = [0, 20, 100] # distance of ith station from start\nm = 10 # km/litre\n\nminimumCost(d, n, C, cost, m)\n")),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"house-robber"},(0,i.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/house-robber/"},"House Robber")),(0,i.kt)("h4",{id:"recurrence-relation-1"},"Recurrence Relation"),(0,i.kt)("p",null,"Robber has 2 options: (Knap-sack problems)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rob current house"),(0,i.kt)("li",{parentName:"ul"},"Don't rob current house")),(0,i.kt)("p",null,"Robber has to maximize profits using these 2 scenarios:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rob current house + loot from houses before the previous"),(0,i.kt)("li",{parentName:"ul"},"Loot from the previous house and those before that")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"rob(i) = max(rob(i - 2) + i, rob(i - 1))\n")),(0,i.kt)("h4",{id:"solution-1"},"Solution"),(0,i.kt)("p",null,"Let ",(0,i.kt)("inlineCode",{parentName:"p"},"rob1 = i - 2")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rob2 = i - 1"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# [rob1, rob2, i, i+1, ...]\n\ndef rob(nums):\n  rob1 = rob2 = 0\n  for i in nums:\n    temp = max(rob1 + i, rob2)\n    # Shift rob variable forward\n    rob1 = rob2\n    rob2 = temp\n  return rob2\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Space Complexity"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"O(1)")," as there are always only 2 variables (rob1, rob2) used."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Time Complexity"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"O(n)")," as there is only one loop through the nums array."),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"01-matrix"},(0,i.kt)("a",{parentName:"h3",href:"https://leetcode.com/problems/01-matrix/"},"01 Matrix")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Excellent ",(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/01-matrix/discuss/1369741/C%2B%2BJavaPython-BFS-DP-solutions-with-Picture-Clean-and-Concise-O(1)-Space"},"leetcode explanation")," by hiepit."))),(0,i.kt)("h4",{id:"solution-1-dp-with-top-down-and-bottom-up"},"Solution 1: DP with Top-Down and Bottom-Up"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"def updateMatrix(self, mat):\n    r, c = len(mat), len(mat[0])\n    # Top-Down Approach\n    for i in range(r):\n      for j in range(c):\n        if mat[i][j] > 0: # cells that needs to be updated\n          left = mat[i][j-1] if j > 0 else math.inf\n          top = mat[i-1][j] if i > 0 else math.inf\n          mat[i][j] = 1 + min(left, top)\n\n    # Bottom-Up Approach\n    for i in range(r-1, -1, -1):\n      for j in range(c-1, -1, -1):\n        if mat[i][j] > 0:\n          right = mat[i][j+1] if j < c-1 else math.inf\n          bot = mat[i+1][j] if i < r-1 else math.inf\n          mat[i][j] = min(mat[i][j], 1 + right, 1 + bot)\n    return mat\n")),(0,i.kt)("p",null,"Time Complexity: ",(0,i.kt)("inlineCode",{parentName:"p"},"O(M * N)")," due to the double for loops to run through the matrix."),(0,i.kt)("p",null,"Space Complexity: ",(0,i.kt)("inlineCode",{parentName:"p"},"O(1)")," as no additional data structures were used."),(0,i.kt)("h4",{id:"solution-2-bfs-starting-from-zeroes"},"Solution 2: BFS starting from zeroes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"def updateMatrix(self, mat):\n  DIR = [(0,1), (1,0), (0,-1), (-1,0)]\n  queue = []\n  for i in range(len(mat)):\n      for j in range(len(mat[0])):\n        if mat[i][j] == 0:\n          queue.append((i, j))\n        else:\n          mat[i][j] = -1 # marked as not processed\n\n  while queue:\n    r, c = queue.pop(0)\n    # Check all four directions\n    for x, y in DIR:\n      nr, nc = r + x, c + y\n      # Check out of bounds and already processed\n      if nr < 0 or nr >= len(mat) or nc < 0 or nc >= len(mat[0]) or mat[nr][nc] != -1:\n        continue\n      mat[nr][nc] = 1 + mat[r][c]\n      queue.append((nr, nc))\n\n  return mat\n")),(0,i.kt)("p",null,"Time Complexity: ",(0,i.kt)("inlineCode",{parentName:"p"},"O(M * N)")," due to the double for loops to run through the matrix."),(0,i.kt)("p",null,"Space Complexity: ",(0,i.kt)("inlineCode",{parentName:"p"},"O(M * N)")," due to the queue used."))}d.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(m,".").concat(d)]||u[d]||c[d]||i;return n?a.createElement(h,r(r({ref:t},s),{},{components:n})):a.createElement(h,r({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);